from django.shortcuts import render, HttpResponse, get_object_or_404
from django.views.generic import CreateView,ListView,UpdateView,DeleteView
from django.urls import reverse_lazy
from .models import Group, BasketItem, PurchasedItem



# def home(request):
#     return HttpResponse("Hello, world. You're at the zimbos_portal_app home page.")

"""
I used class based views to create the views for the group model.
I will perform all CRUD  operations using CBV to reduce boilerplate code.
The forms will be automatically generated by Django using the model fields in the CBV.

My success_url will be a reverse_lazy which will redirect to GroupListView after the operation is successful in the urls.py after naming the url.

"""



class GroupListView(ListView):
    """
    This view is used to list all the groups. 
    """
    model = Group
    template_name = 'app/group_list.html'
    context_object_name = 'groups'


class GroupCreateView(CreateView):
    """
    This view is used to create a new group instance using CBV. It will render a form to create a new group.
    
    """
    model = Group
    fields = ['name','description', 'link', 'group_icon', 'group_icon_url', 'member_count']
    template_name = 'app/create_group.html'
    #todo: Add success_ur to urls.py and name it group list in place of home
    success_url = reverse_lazy('group_list')



class GroupUpdateView(UpdateView):
    """
    This view is used to update the details of a single group. 
    """
    model = Group
    fields = ['name','description', 'link', 'group_icon', 'group_icon_url', 'member_count']
    template_name = 'app/update_group.html'
    success_url = reverse_lazy('group_list')
    context_object_name = "group"

    
class GroupDeleteView(DeleteView):
    """
    This view is used to delete a single group. 
    """
    model = Group
    template_name = 'app/delete_group.html'
    success_url = reverse_lazy('group_list')
    context_object_name = "group"
